"import uos, machine,neopixel\r\n",
"import time\r\n",
"import trainData\r\n",
"import math\r\n",
"training=trainData.data\r\n",
"from machine import Pin, ADC\r\n",
"TMConnect=Pin(5,Pin.OUT)\r\n",
"TMConnect.off()\r\n",
"Sensor = ADC(0)\r\n",
"p2 = machine.Pin(0)\r\n",
"import name\r\n",
"if name.type==\"Motor\":\r\n",
" pwm2 = machine.PWM(p2)\r\n",
" pwm2.freq(50)\r\n",
" pwm2.duty(75)\r\n",
"elif name.type==\"Speaker\":\r\n",
" pwm2 = machine.PWM(p2)\r\n",
" pwm2.freq(50)\r\n",
" pwm2.duty(75)\r\n",
"elif name.type==\"Light\":\r\n",
" np = neopixel.NeoPixel(p2, 8)\r\n\r\n\r\n",
"def convert(x):\r\n",
" return max(min(140, (x - 0) * 119 // 144), 21)\r\n\r\n\r\n\r\n",

"def doSomething(d):\r\n",
" if name.type==\"Motor\":\r\n",
"  pwm2.duty(convert(d))\r\n",
" elif name.type==\"Speaker\":\r\n",
"  pwm2.freq(d)\r\n",
" elif name.type==\"Light\":\r\n",
"  l=0\r\n",
"  r=0\r\n",
"  g=0\r\n",
"  b=0\r\n",
"  allFlag=1\r\n",
"  if d<23:\r\n",
"   allFlag=0\r\n",
"   pass\r\n",
"  elif d>23 and d<123:\r\n",
"   allFlag=0\r\n",
"   l= math.floor(((d-23)*0.08))\r\n",
"   r=255\r\n",
"  elif d>123 and d<223:\r\n",
"   allFlag=0\r\n",
"   l= math.floor(((d-123)*0.08))\r\n",
"   g=255\r\n",
"  elif d>223 and d<323:\r\n",
"   allFlag=0\r\n",
"   l= math.floor(((d-223)*0.08))\r\n",
"   b=225\r\n",
"  elif d>323 and d<423:\r\n",
"   r=math.floor(((d-323)*2.55))\r\n",
"  elif d>423 and d<523:\r\n",
"   r=255\r\n",
"   g=math.floor(((d-423)*2.55))\r\n",
"  elif d>523 and d<623:\r\n",
"   r=255-math.floor(((d-523)*2.55))\r\n",
"   g=255\r\n",
"  elif d>623 and d<723:\r\n",
"   g=255\r\n",
"   b=math.floor(((d-623)*2.55))\r\n",
"  elif d>723 and d<823:\r\n",
"   g=255-math.floor(((d-723)*2.55))\r\n",
"   b=255\r\n",
"  elif d>823 and d<923:\r\n",
"   r=math.floor(((d-823)*2.55))\r\n",
"   b=255\r\n",
"  elif d>923 and d<1024:\r\n",
"   r=255\r\n",
"   g=math.floor(((d-923)*2.55))\r\n",
"   b=255\r\n",
"  if allFlag:\r\n",
"   for i in range(8):\r\n",
"    np[i] = (r, g, b)\r\n",
"  else:\r\n",
"   for i in range(8):\r\n",
"    np[i] = (0, 0, 0)\r\n",
"   np[l] = (r, g, b)\r\n",
"  np.write()\r\n",
"def loop():\r\n",
" while True:\r\n",
"  sens = Sensor.read()\r\n",
"  min = 1000\r\n",
"  pos = 75\r\n",
"  for (a,l) in training:\r\n",
"   dist = abs(sens - l)\r\n",
"   if dist < min:\r\n",
"    min = dist\r\n",
"    pos = a\r\n",
"  doSomething(pos)   \r\n",
"  print(\"$\",",
"name.Name,",
"name.type,",
"sens,pos, \"*\")\r\n",
"  time.sleep(.1)\r\n\r\n\r\n\r\n",
"loop()\r\n",
