#include "Servo.h"
#include"TFT_eSPI.h"

TFT_eSPI tft;
#define LCD_BACKLIGHT (72Ul) // Control Pin of LCD
Servo myservo1;

int training[10][2];
int inc=1;
int count=0;
int pos = 0;
int brightness = 0;
int i=0;
int dist=0;
int mini=0;
int DCount=0;
String state="Training";
bool state_flag= true ;

void buzz(int t){
  for (int i=0;i <t; i++){
      analogWrite(WIO_BUZZER,128);
      delay(200);
      analogWrite(WIO_BUZZER,0);
      delay(200);
  }
}
void wio_display(){
  if (state_flag==true){
  tft.fillScreen(TFT_GREEN);
  tft.drawString(state, 20,20);
  state_flag=false;
  }
}

void reset_wio(){
      DCount=0;
      state="Training";
      state_flag=true;
      myservo1.write(0);
      pos=0;
      i=0;
}



void setup() {
  Serial.begin(115200);

  tft.begin();
  tft.setRotation(3);
  tft.fillScreen(TFT_GREEN);

  
  myservo1.attach(D1);
  
  pinMode(WIO_5S_LEFT,INPUT);
  pinMode(WIO_5S_RIGHT,INPUT);
  pinMode(WIO_5S_DOWN,INPUT);
  pinMode(WIO_5S_PRESS, INPUT);
  pinMode(WIO_LIGHT , INPUT);
  pinMode(WIO_BUZZER, OUTPUT);

  wio_display();

}


void loop() {
  wio_display();
  brightness = analogRead(WIO_LIGHT);



  if(digitalRead(WIO_5S_DOWN) == LOW){
    for (int i=0;i<10;i++){
      Serial.println(training[i][0]);
      Serial.println(training[i][1]);
    }
  }
  if(digitalRead(WIO_5S_LEFT) == LOW) {
    while (digitalRead(WIO_5S_LEFT) == LOW){
          count=count+1;
          pos = pos-inc ;
          myservo1.write(pos);
          pos = max(0, min(pos,180));
          if (count>5){
            inc=min(10,count);
          }
          delay(100);
          Serial.println(pos);
          Serial.println(brightness);
    }
    count=0;
    inc=1;
  }
   else if(digitalRead(WIO_5S_RIGHT) == LOW) {
     while (digitalRead(WIO_5S_RIGHT) == LOW){
          count=count+1;
          pos = pos+inc ;
          myservo1.write(pos);
          pos = max(0, min(pos,180));
          if (count>5){
            inc=min(10,count);
          }
          delay(100);
          Serial.println(pos);
          Serial.println(brightness);
    }
    count=0;
    inc=1;
  }
  if(digitalRead(WIO_5S_PRESS) == LOW){
    if(DCount<10){
      buzz(1);
      training[i][0]=pos;
      training[i][1]=brightness;
      i=i+1;
      DCount+=1;
     }
     else{
      state="Running";
      state_flag=true;
      wio_display();
      buzz(3);

      while(digitalRead(WIO_5S_PRESS)){  //pressing the button will escape the run mode
        brightness = analogRead(WIO_LIGHT);
        mini=1000;
        pos=0;
        for (int i=0;i<10;i++){
          dist=abs(brightness - training[i][1]);
          if (dist<mini){
            mini=dist;
            pos=training[i][0];
            
          }
        }
       myservo1.write(pos);
       delay(100);
      }
      reset_wio();
     }
    }
}